<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:k="clr-namespace:System.Collections.Generic;assembly=mscorlib"
    xmlns:p="clr-namespace:Archidata.Core.Plugin.Diagram"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:local="clr-namespace:Archidata.Core.Controls">


    <Style TargetType="p:DiagramView">
        <Style.Setters>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="p:DiagramView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="p:DiagramViewItem">
        <Style.Setters>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="p:DiagramViewItem">
                        <Border>
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>



    <Style TargetType="{x:Type local:MenuContainer}">
        <Setter Property="Margin" Value="0,3,0,1"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#FF8C8C8C"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuContainer}">
                    <Grid Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ItemsPresenter Margin="{TemplateBinding Padding}" />
                        <TextBlock 
                            HorizontalAlignment="Center" 
                            Text="{TemplateBinding Label}" 
                            Foreground="{TemplateBinding Foreground}" 
                            Grid.Row="1" 
                            FontFamily="{TemplateBinding FontFamily}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontSize="{TemplateBinding FontSize}" Margin="0,0,0,-1"/>
                        <Line Y1="0" Y2="1" Grid.RowSpan="2" StrokeThickness="0.5" Stroke="#FFBBBBBB" Stretch="Fill" HorizontalAlignment="Right" Margin="0,2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ThemeTemplate">
        <Grid>
            <Border Background="{Binding Background}" BorderThickness="{Binding BorderThickness}" BorderBrush="{Binding BorderBrush}">
                <TextBlock Text="T" FontSize="40" FontWeight="UltraBlack" Foreground="{Binding Foreground}" Margin="10,0"/>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ScrollButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="#FFBBBBBB"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Content" Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFF6F6F6" TargetName="Content"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FFF0F0F0" TargetName="Content"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemeItem" TargetType="local:ThemeListItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Content" Width="96" Height="67" Margin="1" BorderThickness="1" Background="White" BorderBrush="White">
                        <ContentPresenter Margin="5" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFF4F4F4" TargetName="Content"/>
                            <Setter Property="BorderBrush" Value="#FFE0E0E0" TargetName="Content"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFEAFFE8" TargetName="Content"/>
                            <Setter Property="BorderBrush" Value="#FF93E491" TargetName="Content"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemeList" TargetType="local:ThemeList">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ThemeControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ThemeControl">
                    <Grid x:Name="Container">
                        <Popup x:Name="POPUP" 
                               StaysOpen="False" 
                               PopupAnimation="Fade" 
                               PlacementTarget="{Binding ElementName=Container}" 
                               AllowsTransparency="True"
                               Placement="Relative">
                            <Border Background="White" BorderThickness="0.5" BorderBrush="#FFBBBBBB">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect ShadowDepth="15"/>
                                </Border.BitmapEffect>
                                <local:ThemeList
                                    x:Name="PART_POPUPLIST"
                                    Style="{StaticResource ThemeList}"                                    
                                    ItemContainerStyle="{StaticResource ThemeItem}"
                                    ItemsSource="{TemplateBinding Items}"
                                    SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                    SelectedIndex="{Binding SelectedIndex,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                    ItemTemplate="{StaticResource ThemeTemplate}">
                                    <local:ThemeList.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal" Width="400"/>
                                        </ItemsPanelTemplate>
                                    </local:ThemeList.ItemsPanel>
                                </local:ThemeList>
                            </Border>
                        </Popup>
                        <Grid Panel.ZIndex="-1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="0.5" BorderBrush="#FFBBBBBB">
                                <local:UniformScrollViewer
                                x:Name="PART_SCROLLVIEWER"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"
                                Panel.ZIndex="-1">
                                    <local:ThemeList
                                        x:Name="PART_LIST"
                                        Style="{StaticResource ThemeList}"
                                        ItemContainerStyle="{StaticResource ThemeItem}"
                                        ItemsSource="{TemplateBinding Items}" 
                                        SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource TemplatedParent}}"
                                        SelectedIndex="{Binding SelectedIndex,RelativeSource={RelativeSource TemplatedParent}}"
                                        ItemTemplate="{StaticResource ThemeTemplate}">
                                        <local:ThemeList.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Horizontal" Width="400"/>
                                            </ItemsPanelTemplate>
                                        </local:ThemeList.ItemsPanel>
                                    </local:ThemeList>
                                </local:UniformScrollViewer>
                            </Border>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_LINEUP" Grid.Row="0" Style="{StaticResource ScrollButton}" BorderThickness="0,0.5,0.5,0">
                                    <Path Stretch="Uniform" Margin="4" Fill="DarkGray" Data="F1 M 12,4.85387L 3.74835,19.1461L 20.2516,19.1461L 12,4.85387 Z "/>
                                </Button>
                                <Button x:Name="PART_LINEDOWN" Grid.Row="1" Style="{StaticResource ScrollButton}" BorderThickness="0,0.5,0.5,0">
                                    <Path Stretch="Uniform" Margin="4" Fill="DarkGray" Data="F1 M 12.0017,19.1442L 20.2533,4.85196L 3.75001,4.85196L 12.0017,19.1442 Z "/>
                                </Button>
                                <Button x:Name="CommandButton" Grid.Row="2" Style="{StaticResource ScrollButton}" BorderThickness="0,0.5,0.5,0.5">
                                    <Canvas>
                                        <Path Width="6" Height="6" Canvas.Left="4.5" Canvas.Top="10" Stretch="Fill" Fill="DarkGray" Data="F1 M 12.0017,22.1442L 20.2533,7.85196L 3.75001,7.85196L 12.0017,22.1442 Z "/>
                                        <Rectangle Width="6" Height="1.5" Canvas.Left="4.5" Canvas.Top="7" Stretch="Fill" Fill="DarkGray"/>
                                    </Canvas>
                                </Button>
                            </Grid>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="CommandButton">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames
                                    Storyboard.TargetName="POPUP"
                                    Storyboard.TargetProperty="IsOpen">
                                        <DiscreteBooleanKeyFrame
                                            KeyTime="00:00:00"
                                            Value="True" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style TargetType="{x:Type local:MenuButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2,1,0,0"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuButton}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid Margin="{TemplateBinding Padding}">
                                <StackPanel x:Name="VerticalLayout" Visibility="Visible">
                                    <Image Source="{TemplateBinding Icon}" Width="44"/>
                                    <TextBlock Text="{TemplateBinding Label}" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <Grid x:Name="HorizontalLayout" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="{TemplateBinding Icon}" Width="20"/>
                                    <TextBlock Grid.Column="1" Text="{TemplateBinding Label}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Grid x:Name="DisabledOverlay" Background="White" Opacity="0.5" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="FrameworkElement.Visibility" TargetName="HorizontalLayout" Value="Visible"/>
                            <Setter Property="FrameworkElement.Visibility" TargetName="VerticalLayout" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="FrameworkElement.Visibility" TargetName="DisabledOverlay" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type local:MenuRadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2,1,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuRadioButton}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="0.5" BorderBrush="Transparent" SnapsToDevicePixels="true">
                            <Grid Margin="{TemplateBinding Padding}">
                                <StackPanel x:Name="VerticalLayout" Visibility="Visible">
                                    <Image Source="{TemplateBinding Icon}" Width="44"/>
                                    <TextBlock Text="{TemplateBinding Label}" HorizontalAlignment="Center"/>
                                </StackPanel>
                                <Grid x:Name="HorizontalLayout" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="{TemplateBinding Icon}" Width="20"/>
                                    <TextBlock Grid.Column="1" Text="{TemplateBinding Label}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Grid x:Name="DisabledOverlay" Background="White" Opacity="0.5" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="FrameworkElement.Visibility" TargetName="DisabledOverlay" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFD7D7D7"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="FrameworkElement.Visibility" TargetName="HorizontalLayout" Value="Visible"/>
                            <Setter Property="FrameworkElement.Visibility" TargetName="VerticalLayout" Value="Collapsed"/>
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:Resizeable}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="MinWidth" Value="160"/>
        <Setter Property="MinHeight" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Resizeable}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border>
                            <Grid>
                                <Rectangle x:Name="Border" Stroke="Gray" StrokeDashArray="5" StrokeThickness="1" Margin="-2">
                                    <Rectangle.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="30" Duration="0:0:0:01" RepeatBehavior="Forever" By="2" Storyboard.TargetProperty="StrokeDashOffset" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Rectangle.Triggers>
                                </Rectangle>
                                <Thumb x:Name="PART_THUMB_SE" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE" Panel.ZIndex="1">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <ResizeGrip/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                
                                

                                <ContentControl x:Name="PART_DRAGDELTA" Content="{TemplateBinding Content}" Background="{TemplateBinding Background}" 
                                                Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_THUMB_SE"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush Color="#FF41C10A" x:Key="App.DefaultColor"/>
    <SolidColorBrush Color="#FF35B200" x:Key="App.PointerOverColor"/>
    <SolidColorBrush Color="#FF2C9300" x:Key="App.PressedColor"/>
    <Style TargetType="{x:Type local:FileMenu}">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileMenu}">
                    <Grid>
                        <Button x:Name="PART_BTN">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                    <Setter Property="Background" Value="{StaticResource App.DefaultColor}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="4"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                    <TextBlock Text="Arquivo" Foreground="White" Focusable="False" TextAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsDefaulted" Value="true">
                                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource App.PointerOverColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="true">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource App.PressedColor}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Popup IsOpen="{Binding IsOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" AllowsTransparency="True" PopupAnimation="Fade" StaysOpen="False">
                            <Grid>
                                <Border BorderBrush="#FFD8D8D8" BorderThickness="1" Background="White" Width="500" Margin="0,0,4,4">
                                    <Border.BitmapEffect>
                                        <DropShadowBitmapEffect Direction="180" Opacity="0.3" ShadowDepth="3" Softness="0.3"/>
                                    </Border.BitmapEffect>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ItemsPresenter/>

                                        <Border Grid.Column="1" Background="#FFF3F3F3" BorderBrush="#FFD8D8D8" BorderThickness="1,0,0,0">
                                            <ContentPresenter Content="{TemplateBinding RightContainer}"/>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:FileMenuItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileMenuItem}">
                    <!--<Viewbox x:Name="container" Stretch="Fill">-->
                    <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Width="36" Source="{TemplateBinding Icon}"/>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Label}" Foreground="#FF515151" Margin="10" FontSize="14"/>
                            </Grid>
                            <ContentPresenter/>
                            <Rectangle x:Name="Overlay" Visibility="Collapsed" Fill="#A5FFFFFF"/>
                        </Grid>
                    </Border>
                    <!--</Viewbox>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="Overlay" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFDFDFDF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Themes:SystemDropShadowChrome x:Name="chrome" Margin="5">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </Border>
                        </Themes:SystemDropShadowChrome>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="0" TargetName="chrome"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>